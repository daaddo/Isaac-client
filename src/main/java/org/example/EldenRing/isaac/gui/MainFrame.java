/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package org.example.EldenRing.isaac.gui;

import org.example.EldenRing.isaac.events.GameEventListner;
import org.example.EldenRing.isaac.factory.FightingRoomFactory;
import org.example.EldenRing.isaac.factory.NormalPrizeRoomFactory;
import org.example.EldenRing.isaac.manager.GameManager;
import org.example.EldenRing.isaac.piano.Piano;
import org.example.EldenRing.isaac.rooms.Factory.StarterRoomFactory;
import org.example.EldenRing.isaac.rooms.models.NormalPrizeRoom;
import org.example.EldenRing.other.RoomCoordinates;

import java.awt.*;

/**
 * @author trapa
 */
public class MainFrame extends javax.swing.JFrame implements GameEventListner {
    private static int piano =Piano.getNumero();

    public static int getPiano() {
        return piano;
    }

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        GameManager.getInstance().subscribeGameListner(this);

        this.setMinimumSize(new Dimension(900, 900));
        setLocationRelativeTo(null);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.GridLayout(15, 15, 1, 1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;

    @Override
    public void newGame(Piano piano) {
        int[][] roomMap = piano.getRoomMap();
        for (int i = 0; i < 15; i++) {
            for (int j = 0; j < 15; j++) {
                if (roomMap[i][j] == 2) {
                    this.jPanel1.add(new RoomPanel(new RoomCoordinates(i, j), true,new StarterRoomFactory().createRoom(new RoomCoordinates(i,j))));
                } else if (roomMap[i][j] == 1) {
                    double random = Math.random();
                    if (random <0.35) {
                        this.jPanel1.add(new RoomPanel(new RoomCoordinates(i, j), false,new NormalPrizeRoomFactory().createRoom(new RoomCoordinates(i,j))));
                    }
                    else {
                        this.jPanel1.add(new RoomPanel(new RoomCoordinates(i, j), false,new FightingRoomFactory().createRoom(new RoomCoordinates(i,j))));

                    }


                } else {
                    this.jPanel1.add(new NoRoomPanel());
                }
            }
        }
    }

    @Override
    public void move(RoomCoordinates roomCoordinates) {

    }

    @Override
    public void enteredRoom() {

    }
    // End of variables declaration//GEN-END:variables
}
